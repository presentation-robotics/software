// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Shooter.h"
#include "../Robotmap.h"
Shooter::Shooter() : Subsystem("Shooter") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	triggerSolenoid = RobotMap::shooterTriggerSolenoid;
	retractMotor = RobotMap::shooterRetractMotor;
	retractLimit1 = RobotMap::shooterRetractLimit1;
	retractLimit2 = RobotMap::shooterRetractLimit2;
	retractEncoder = RobotMap::shooterRetractEncoder;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	printf( "2135: Shooter Constructor\n" );
}   
void Shooter::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
//
//	Energize shooter with motor
//
void Shooter::ShooterFire( void ) 
{
	double speed;
	speed = SmartDashboard::GetNumber("Shooter Speed");
	retractMotor->Set( speed );
}
//
//	Extend shooter with motor
//
void Shooter::ShooterReload( void ) 
{
	double speed;
	speed = SmartDashboard::GetNumber("Shooter Speed");
	printf ( "Shooter Speed: %f\n", speed );
	retractMotor->Set( -speed );
}
//
//	Stop shooter motor
//
