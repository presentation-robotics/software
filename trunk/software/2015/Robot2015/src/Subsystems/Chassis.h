// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef CHASSIS_H
#define CHASSIS_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Chassis: public Subsystem {
private:
	// It's desirable that everything possible under private except
	// for methods that implement subsystem capabilities
	double m_orientationNormal;
	Timer* m_speedTimer;
	double m_minRange;
	double m_maxRange;
public:
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	Encoder* encoderL;
	CANTalon* motorL;
	PIDController* leftPID;
	Encoder* encoderR;
	CANTalon* motorR;
	PIDController* rightPID;
	CANTalon* motorL2;
	CANTalon* motorR2;
	Ultrasonic* ultrasonicDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	RobotDrive* robotDrive;
	Chassis();
	void InitDefaultCommand();
	bool DriveDistanceWithPIDIsAtSetpoint ();
	void DriveDistanceWithPIDExecute ();
	void DriveDistanceWithPIDInit( double distance );
	void DriveDistanceWithPIDStop ();
	void DriveWithJoystick(Joystick *joystick1);
	void DriveUsingLeftRightMotorOutputs(double left, double right);
	void ReverseDriveTrain();
	double GetLeftSpeed( void );
	double GetRightSpeed( void );
	double GetLeftSpeedAverage( void );
	double GetRightSpeedAverage( void );
};

#endif
