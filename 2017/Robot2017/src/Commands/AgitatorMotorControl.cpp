// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "AgitatorMotorControl.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

AgitatorMotorControl::AgitatorMotorControl(int direction): Command() {
    m_direction = direction;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::agitator.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void AgitatorMotorControl::Initialize() {
	const char *strName;

	if (m_direction == Robot::agitator->AGITATOR_FORWARD)
		strName = "Forward";
	else if (m_direction == Robot::agitator->AGITATOR_REVERSE)
		strName = "Reverse";
	else
		strName = "Idle";

	std::printf("2135: Agitator Motor Control %s - Start\n", strName);
}

// Called repeatedly when this Command is scheduled to run
void AgitatorMotorControl::Execute() {
	Robot::agitator->SetMotorSpeed(m_direction);
}

// Make this return true when this Command no longer needs to run execute()
bool AgitatorMotorControl::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void AgitatorMotorControl::End() {
	std::printf("2135: Agitator Motor Control - Ended\n");
	Robot::agitator->SetMotorSpeed(Robot::agitator->AGITATOR_STOP);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AgitatorMotorControl::Interrupted() {
	std::printf("2135: Agitator Motor Control - Interrupted\n");
	Robot::agitator->SetMotorSpeed(Robot::agitator->AGITATOR_STOP);
}
