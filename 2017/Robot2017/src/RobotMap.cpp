// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<CANTalon> RobotMap::chassisMotorL2;
std::shared_ptr<CANTalon> RobotMap::chassisMotorL3;
std::shared_ptr<CANTalon> RobotMap::chassisMotorR4;
std::shared_ptr<CANTalon> RobotMap::chassisMotorR5;
std::shared_ptr<AnalogGyro> RobotMap::chassisAnalogGyro1;
std::shared_ptr<CANTalon> RobotMap::climberMotorUp;
std::shared_ptr<CANTalon> RobotMap::intakeMotorIn;
std::shared_ptr<CANTalon> RobotMap::shooterMotorOut;
std::shared_ptr<DoubleSolenoid> RobotMap::deliveryDeliverySolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    chassisMotorL2.reset(new CANTalon(2));
    lw->AddActuator("Chassis", "MotorL2", chassisMotorL2);
    
    chassisMotorL3.reset(new CANTalon(3));
    lw->AddActuator("Chassis", "MotorL3", chassisMotorL3);
    
    chassisMotorR4.reset(new CANTalon(4));
    lw->AddActuator("Chassis", "MotorR4", chassisMotorR4);
    
    chassisMotorR5.reset(new CANTalon(5));
    lw->AddActuator("Chassis", "MotorR5", chassisMotorR5);
    
    chassisAnalogGyro1.reset(new AnalogGyro(0));
    lw->AddSensor("Chassis", "AnalogGyro1", chassisAnalogGyro1);
    chassisAnalogGyro1->SetSensitivity(0.007);
    climberMotorUp.reset(new CANTalon(6));
    lw->AddActuator("Climber", "MotorUp", climberMotorUp);
    
    intakeMotorIn.reset(new CANTalon(7));
    lw->AddActuator("Intake", "MotorIn", intakeMotorIn);
    
    shooterMotorOut.reset(new CANTalon(8));
    lw->AddActuator("Shooter", "MotorOut", shooterMotorOut);
    
    deliveryDeliverySolenoid.reset(new DoubleSolenoid(0, 0, 1));
    lw->AddActuator("Delivery", "Delivery Solenoid", deliveryDeliverySolenoid);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
