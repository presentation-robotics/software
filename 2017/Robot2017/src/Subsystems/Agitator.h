// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef AGITATOR_H
#define AGITATOR_H
#include "Commands/Subsystem.h"
#include "WPILib.h"

#include "ctre/Phoenix.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Agitator: public Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<TalonSRX> motor12;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	const double agitatorSpeed = -1.0; 			// Default Motor Speed

public:
	Agitator();
	void InitDefaultCommand();
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void Initialize(frc::Preferences *prefs);
	void UpdateSmartDashboardValues(void);
	void SetMotorSpeed(int setting);

	enum { AGITATOR_STOP = 0, AGITATOR_FORWARD = 1, AGITATOR_REVERSE = -1 };
};

#endif
