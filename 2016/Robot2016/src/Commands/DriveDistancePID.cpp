// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "DriveDistancePID.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

DriveDistancePID::DriveDistancePID(double distance, double maxSpeed): Command() {
    m_distance = distance;
    m_maxSpeed = maxSpeed;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::chassis.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void DriveDistancePID::Initialize() {
    printf("2135: Drive Distance PID\n");
    m_distance = SmartDashboard::GetNumber("AutoDriveDistance", 12.0);
    printf("2135: %f inches\n", m_distance);
    Robot::chassis->MoveDistanceWithPIDInit(m_distance);

}

// Called repeatedly when this Command is scheduled to run
void DriveDistancePID::Execute() {
	Robot::chassis->MoveDistanceWithPIDExecute();
}

// Make this return true when this Command no longer needs to run execute()
bool DriveDistancePID::IsFinished() {
	if ((Robot::chassis->MoveDistanceWithPIDIsAtSetpoint())) {
        printf("PID is finished\n");
        return true;
	}
    return false;
}

// Called once after isFinished returns true
void DriveDistancePID::End() {
	Robot::chassis->MoveDistanceWithPIDStop();
	printf("PID is stopped\n");
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveDistancePID::Interrupted() {
	Robot::chassis->MoveDistanceWithPIDStop();
	printf("PID is interrupted\n");
}
