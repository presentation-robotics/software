// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Shooter.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Shooter::Shooter() : Subsystem("Shooter") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    lowerMotor = RobotMap::shooterLowerMotor;
    upperMotor = RobotMap::shooterUpperMotor;
    fireSolenoid = RobotMap::shooterFireSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    lowerMotor->SetSafetyEnabled(false);
    upperMotor->SetSafetyEnabled(false);

    m_upperSpeed = 0.8;
    m_lowerSpeed = 0.5;
}

void Shooter::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Shooter::LoadPreferences(Preferences *prefs) {
	printf("2135: Shooter Preferences\n");

	//Initialize and read file
	//ShooterUpperSpeed
		if (prefs->ContainsKey( "ShooterUpperSpeed" ) ) {
			m_upperSpeed = prefs->GetDouble("ShooterUpperSpeed", 0.5);
		}
		else {
			printf("2135: ShooterUpperSpeed Not Found - ERROR\n");
		}
		printf("2135: ShooterUpperSpeed: %f\n", m_upperSpeed);

	//ShooterLowerSpeed
		if (prefs->ContainsKey( "ShooterLowerSpeed" ) ) {
			m_lowerSpeed = prefs->GetDouble("ShooterLowerSpeed", 0.5);
		}
		else {
			printf("2135: ShooterLowerSpeed not found - ERROR\n");
		}
		printf("2135: ShooterLowerSpeed: %f\n", m_lowerSpeed);
}

void Shooter::ShootSpeeds(double upperSpeed, double lowerSpeed) {
	lowerMotor->Set(lowerSpeed);
	upperMotor->Set(upperSpeed);

}

