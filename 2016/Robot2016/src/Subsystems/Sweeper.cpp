// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Sweeper.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Sweeper::Sweeper() : Subsystem("Sweeper") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    motor = RobotMap::sweeperMotor;
    extension = RobotMap::sweeperExtension;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    m_sweeperSpeed = 0.7;
}

void Sweeper::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Sweeper::LoadPreferences(Preferences *prefs) {
	printf("2135: Sweeper Preferences\n");

	//Initialize and read file
	//SweeperSpeed
	if (prefs->ContainsKey( "SweeperSpeed" ) ) {
		m_sweeperSpeed = prefs->GetDouble("SweeperSpeed", 0.5);
	}
	else {
		printf("2135: SweeperSpeed Not Found - ERROR\n");
	}
	printf("2135: SweeperSpeed: %f\n", m_sweeperSpeed);
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Sweeper::Initialize(void) {
	printf("2135: Sweeper Initialized\n");
}

// TODO: Check the Arm Extend code please
void Sweeper::ArmExtend(bool extend) {
	if(extend == true) {
		extension->Set(extension->kForward);
	}
	else {
		extension->Set(extension->kReverse);
	}
}
