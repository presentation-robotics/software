// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotContainer.h"
#include <frc2/command/ParallelRaceGroup.h>
#include <frc/smartdashboard/SmartDashboard.h>



RobotContainer* RobotContainer::m_robotContainer = NULL;

RobotContainer::RobotContainer() : m_autonomousCommand(
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
){

               

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD
    // Smartdashboard Subsystems


    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    frc::SmartDashboard::PutData("Climber Deploy", new ClimberDeploy( &m_dummy ));
    frc::SmartDashboard::PutData("Climber Run", new ClimberRun());
    frc::SmartDashboard::PutData("Conveyor Run", new ConveyorRun());
    frc::SmartDashboard::PutData("Drive Mode Toggle", new DriveModeToggle( &m_dummy ));
    frc::SmartDashboard::PutData("Drive Quick Turn", new DriveQuickTurn());
    frc::SmartDashboard::PutData("Drive Reset", new DriveReset( &m_dummy ));
    frc::SmartDashboard::PutData("Drive Shift", new DriveShift());
    frc::SmartDashboard::PutData("Drive Teleop", new DriveTeleop());
    frc::SmartDashboard::PutData("Indexer Deploy", new IndexerDeploy( &m_dummy ));
    frc::SmartDashboard::PutData("Intake Run", new IntakeRun());
    frc::SmartDashboard::PutData("LED Set", new LEDSet( &m_dummy ));
    frc::SmartDashboard::PutData("Shooter Run", new ShooterRun());
    frc::SmartDashboard::PutData("Spin Color", new SpinColor());
    frc::SmartDashboard::PutData("Spin Rotation", new SpinRotation());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=SMARTDASHBOARD

    ConfigureButtonBindings();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT-COMMANDS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS


    m_chooser.SetDefaultOption("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=AUTONOMOUS

    frc::SmartDashboard::PutData("Auto Mode", &m_chooser);

}

RobotContainer* RobotContainer::GetInstance()
{
    if (m_robotContainer == NULL) {
        m_robotContainer = new RobotContainer();
    }
    return(m_robotContainer);
}

void RobotContainer::ConfigureButtonBindings()
{
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS


frc2::Command* RobotContainer::GetAutonomousCommand()
{
  // The selected command will be run in autonomous
  return m_chooser.GetSelected();
}
