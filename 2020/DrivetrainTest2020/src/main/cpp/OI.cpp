// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/smartdashboard/SmartDashboard.h"
#include "Commands/AllMotors.h"
#include "Commands/AutoCommand.h"
#include "Commands/DriveShift.h"
#include "Commands/DriveTeleop.h"
#include "Commands/Pair_L1_R3.h"
#include "Commands/Pair_L1_R4.h"
#include "Commands/Pair_L2_R3.h"
#include "Commands/Pair_L2_R4.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
joystick.reset(new frc::Joystick(0));

button_6.reset(new frc::JoystickButton(joystick.get(), 1));
button_6->WhileHeld(new AllMotors());
button_5.reset(new frc::JoystickButton(joystick.get(), 5));
button_5->WhenPressed(new Pair_L2_R4());
button_4.reset(new frc::JoystickButton(joystick.get(), 4));
button_4->WhenPressed(new Pair_L2_R3());
button_3.reset(new frc::JoystickButton(joystick.get(), 3));
button_3->WhenPressed(new Pair_L1_R4());
button_2.reset(new frc::JoystickButton(joystick.get(), 2));
button_2->WhenPressed(new Pair_L1_R3());
button_1.reset(new frc::JoystickButton(joystick.get(), 1));
button_1->WhenPressed(new DriveShift(true));

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("All Motors", new AllMotors());
    frc::SmartDashboard::PutData("Pair_L2_R4", new Pair_L2_R4());
    frc::SmartDashboard::PutData("Pair_L2_R3", new Pair_L2_R3());
    frc::SmartDashboard::PutData("Pair_L1_R4", new Pair_L1_R4());
    frc::SmartDashboard::PutData("Pair_L1_R3", new Pair_L1_R3());
    frc::SmartDashboard::PutData("Drive Shift: lowGear", new DriveShift(false));
    frc::SmartDashboard::PutData("Drive Shift: highGear", new DriveShift(true));
    frc::SmartDashboard::PutData("Drive Teleop", new DriveTeleop());
    frc::SmartDashboard::PutData("Auto Command", new AutoCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getJoystick() {
   return joystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
