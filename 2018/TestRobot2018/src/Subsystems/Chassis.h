// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef CHASSIS_H
#define CHASSIS_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "ctre/Phoenix.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Chassis: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<WPI_TalonSRX> motorL1;
	std::shared_ptr<WPI_TalonSRX> motorR3;
	std::shared_ptr<frc::DifferentialDrive> differentialDrive1;
	std::shared_ptr<WPI_TalonSRX> motorR4;
	std::shared_ptr<WPI_TalonSRX> motorL2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS



/*	ctre::phoenix::motorcontrol::can::WPI_TalonSRX m_motorL1{1};
//	ctre::phoenix::motorcontrol::can::WPI_TalonSRX m_motorL2{2};
//	ctre::phoenix::motorcontrol::can::WPI_TalonSRX m_motorR3{3};
//	ctre::phoenix::motorcontrol::can::WPI_TalonSRX m_motorR4{4};
//	frc::SpeedControllerGroup m_left{m_motorL1, m_motorL2};
//	frc::SpeedControllerGroup m_right{m_motorR3, m_motorR4};
	frc::DifferentialDrive m_robotDrive{m_left,m_right};
*/

	double m_driveDirection;			// Allows chassis drive direction change

public:
	Chassis();
	void InitDefaultCommand() override;
	void Periodic() override;
	void MoveWithJoystick(std::shared_ptr<Joystick>);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
};

#endif
