// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "GripperExtend.h"
#include "../Subsystems/Wrist.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

GripperExtend::GripperExtend(int position): frc::Command() {
    m_position = position;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::gripper.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void GripperExtend::Initialize() {

	const char *strName;
	double angle;

	switch (m_position)
	{
	default:
	case WRIST_STOW:
		strName = "STOWED";
		angle = 0.0;
		break;
	case WRIST_DELIVERY:
		strName = "IN DELIVERY";
		angle = 45.0; //TODO determine right angle
		break;
	case WRIST_FLAT:
		strName = "FLAT";
		angle = 90.0;
		break;
	}

	Robot::wrist->WristPIDInit(angle);

	std::printf("2135: Gripper Arm Is %s - Initialized\n", strName);
}

// Called repeatedly when this Command is scheduled to run
void GripperExtend::Execute() {
	Robot::wrist->WristPIDExecute();
}

// Make this return true when this Command no longer needs to run execute()
bool GripperExtend::IsFinished() {
	bool isFinished;

	isFinished = Robot::wrist->WristPIDIsAtSetpoint();

    return isFinished;
}

// Called once after isFinished returns true
void GripperExtend::End() {
	std::printf("2135: Gripper Arm Extended - End\n");
	Robot::wrist->WristPIDStop();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void GripperExtend::Interrupted() {
	std::printf("2135: Gripper Arm Extended - Interrupted\n");
	Robot::wrist->WristPIDStop();
}
