// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef GRIPPER_H
#define GRIPPER_H
#include "Commands/Subsystem.h"
#include "WPILib.h"
#include "../RobotDefaults.h"
#include "../RobotConfig.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Gripper: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
#ifdef ROBOTNOTSTANDALONE
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	std::shared_ptr<WPI_TalonSRX> motorL7;
	std::shared_ptr<WPI_TalonSRX> motorR8;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

	const double m_gripperSpeed = -1.0;

#endif
public:
	Gripper();
	void InitDefaultCommand() override;
	enum {GRIPPER_STOP = 0, GRIPPER_FORWARD = 1, GRIPPER_REVERSE = -1};
	void Initialize(frc::Preferences *RobotConfig);
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

	void SetMotorSpeed(int speed);
};

#endif
