// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ctre/Phoenix.h"

#include "../RobotDefaults.h"
#include "Gripper.h"
#include "../RobotMap.h"
#include "../Commands/GripperRun.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Gripper::Gripper() : frc::Subsystem("Gripper") {
	std::printf("2135: Gripper Constructor\n");

#ifdef ROBOTNOTSTANDALONE
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    motorL7 = RobotMap::gripperMotorL7;
    motorR8 = RobotMap::gripperMotorR8;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    motorL7->SetInverted(false);
    motorR8->SetInverted(true);
    motorL7->Set(ControlMode::PercentOutput, 0.0);
    motorR8->Set(ControlMode::PercentOutput, 0.0);
    motorL7->SetNeutralMode(NeutralMode::Brake);
    motorR8->SetNeutralMode(NeutralMode::Brake);
    std::printf("2135: Motor L7 ID %d ver %d.%d\n", motorL7->GetDeviceID(), motorL7->GetFirmwareVersion()/256, motorL7->GetFirmwareVersion()%256);
    std::printf("2135: Motor R8 ID %d ver %d.%d\n", motorR8->GetDeviceID(), motorR8->GetFirmwareVersion()/256, motorR8->GetFirmwareVersion()%256);
#endif
}

void Gripper::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
#ifdef ROBOTNOTSTANDALONE
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
#endif
}

void Gripper::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Gripper::GripperMove(bool direction) {
#ifdef ROBOTNOTSTANDALONE
	if (direction) {
		motorL7->Set(ControlMode::PercentOutput, 0.5);
		motorR8->Set(ControlMode::PercentOutput, 0.5);
	}
	else {
		motorL7->Set(ControlMode::PercentOutput, -0.5);
		motorR8->Set(ControlMode::PercentOutput, -0.5);
	}
#endif
}
