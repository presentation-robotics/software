// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ctre/Phoenix.h"


#include "Gripper.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "../Commands/Intake.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Gripper::Gripper() : frc::Subsystem("Gripper") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    motor5 = RobotMap::gripperMotor5;
    motor6 = RobotMap::gripperMotor6;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    motor5->SetInverted(false);
    motor6->SetInverted(true);
    motor5->Set(ControlMode::PercentOutput, 0.0);
    motor6->Set(ControlMode::Follower, 5);
    printf("2135: Motor 5 ID %d ver %d.%d\n", motor5->GetDeviceID(), motor5->GetFirmwareVersion()/256, motor5->GetFirmwareVersion()%256);
    printf("2135: Motor 6 ID %d ver %d.%d\n", motor6->GetDeviceID(), motor6->GetFirmwareVersion()/256, motor6->GetFirmwareVersion()%256);
}

void Gripper::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        SetDefaultCommand(new Intake(true));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Gripper::Periodic() {
    // Put code here to be run every loop

}


// Put methods for controlling this subsystem
// here. Call these from Commands.

void Gripper::Acquire() {
	motor5->Set(-0.5);
	motor6->Set(-0.5);
}

void Gripper::Expel() {
	motor5->Set(0.5);
	motor6->Set(0.5);
}


